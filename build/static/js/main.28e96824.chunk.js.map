{"version":3,"sources":["components/AddToPhonebook.js","components/Finder.js","components/DisplayPhonebook.js","services/Phonebook.js","components/Notification.js","App.js","index.js"],"names":["AddToPhonebook","newName","setNewName","newNumber","setNewNumber","submitHandler","onChange","e","target","value","type","onClick","Finder","setNewSearch","newSearch","DisplayOne","each","deletion","name","number","DisplayPhonebook","display","map","key","baseURL","axios","get","then","response","data","newObj","post","id","delete","put","Notification","message","className","App","useState","persons","setPersons","notification","setNotification","condition","setCondition","useEffect","phonebookService","newRegex","RegExp","filter","obj","match","event","preventDefault","newAddition","foundID","find","confirm","setTimeout","phonebook","returnedPerson","catch","error","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28e96824.chunk.js","sourcesContent":["import React from 'react';  \n    \nconst AddToPhonebook = ({newName, setNewName, newNumber, setNewNumber, submitHandler}) => {\n    \n\nreturn(\n    <form>\n        <div>\n          name: <input onChange={e => setNewName(e.target.value)} value={newName}/>\n          number: <input onChange={e => setNewNumber(e.target.value)} value={newNumber}/>\n        </div>\n        <div>\n          <button type=\"submit\" onClick={submitHandler}>add</button>\n        </div>\n    </form>\n)\n}\n\nexport default AddToPhonebook;","import React from 'react';\n\nconst Finder = ({setNewSearch, newSearch}) => {\nreturn(\n    <div>\n        Find: <input onChange={e => setNewSearch(e.target.value)} value={newSearch}></input>\n    </div>\n)\n}\n\nexport default Finder;","import React from 'react';\n\nconst DisplayOne = ({each, deletion}) => {\n    return(\n    <>\n    <p>{each.name}: {each.number}</p>\n    <button onClick={() => deletion(each)}>Delete</button>\n    </>\n    )\n}\n\nconst DisplayPhonebook = ({display, deletion}) => {\nreturn(\n    <div>\n       {display.map(each => <DisplayOne key={each.name} deletion={deletion} each={each}></DisplayOne> )}\n    </div>   \n)\n}\n\nexport default DisplayPhonebook;","import axios from 'axios';\nconst baseURL = 'http://localhost:3001/api/persons';\n\nconst getAll = () =>{\n    const request = axios.get(baseURL);\n    return request.then(response => response.data);\n};\n\nconst create = newObj =>{\n    const request = axios.post(baseURL, newObj);\n    return request.then(response => response.data);\n};\n\nconst update = (id, newObj) =>{\n    const request = axios.put(`${baseURL}/${id}`, newObj)\n    return request.then(response => response.data)\n}\n\nconst remove = id => axios.delete(`${baseURL}/${id}`);\n\nexport default {getAll, create, remove, update};\n","import React from 'react';\n\nconst Notification = ({ message, className }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className={className}>\n        {message}\n      </div>\n    )\n  }\n\n\nexport default Notification;","import React, { useState, useEffect} from 'react';\nimport AddToPhonebook from './components/AddToPhonebook';\nimport Finder from './components/Finder';\nimport DisplayPhonebook from './components/DisplayPhonebook';\nimport phonebookService from './services/Phonebook';\nimport phonebook from './services/Phonebook';\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber ] = useState('');\n  const [ newSearch, setNewSearch ] = useState('');\n  const [ notification, setNotification] = useState(null);\n  const [ condition, setCondition ] = useState(''); \n\n  useEffect(()=>{\n    phonebookService\n      .getAll()\n      .then(response => setPersons(response))\n  }, [])\n\n  const submitHandler = event => { \n    event.preventDefault();\n    let newAddition = { name: newName, number: newNumber };\n    const foundID = persons.find(obj => obj.name === newAddition.name);\n    if(foundID){\n      /* eslint-disable */\n      if(confirm(`Do you want to update the number for ${newAddition.name}`)){\n        setNotification('Phone number updated.');\n        setCondition('success');\n        setTimeout(() => {\n          setNotification(null)\n        }, 5000)\n        return( \n        phonebook\n          .update(foundID.id, {...newAddition, id: foundID})\n          \n          .then(returnedPerson => {\n            setPersons(persons.map(each => each.id != foundID.id ? each : returnedPerson));\n            setNewName('');\n            setNewNumber('');})\n\n          .catch(error => {\n            setCondition('error');\n            setNotification(`${newAddition.name} was removed from the server.`)\n            setTimeout(() => {\n              setNotification(null)\n            }, 5000)\n            phonebookService\n              .getAll()\n              .then(response => setPersons(response))\n          })       \n    )}};\n\n    phonebookService\n      .create(newAddition)\n      .then(response => {\n        setPersons(persons.concat(response))\n        setNewName('');\n        setNewNumber('');\n      })\n      setNotification('Person added to the phonebook.');\n      setCondition('success');\n      setTimeout(() => {\n        setNotification(null)\n      }, 5000)\n  }\n\n  const deletion = each => {\n    /* eslint-disable */\n    if(confirm(`Are you sure you want to delete ${each.name}`)){\n      phonebook\n      .remove(each.id);\n      phonebookService\n      .getAll()\n      .then(response => setPersons(response))\n    }\n  }\n\n  const newRegex = new RegExp(newSearch, 'gi')\n  const display = persons.filter(obj => obj.name.match(newRegex));\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification className={condition} message={notification}></Notification>\n      <Finder setNewSearch={setNewSearch} newSearch={newSearch}></Finder>\n      <AddToPhonebook newName={newName} setNewName={setNewName} newNumber={newNumber} setNewNumber={setNewNumber} submitHandler={submitHandler}></AddToPhonebook>\n      <h2>Numbers</h2>\n      <DisplayPhonebook display={display} deletion={deletion}></DisplayPhonebook>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}